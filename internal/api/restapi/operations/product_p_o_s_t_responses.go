// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	middleware "github.com/go-openapi/runtime/middleware"

	models "github.com/ZergsLaw/korean/internal/api/models"
)

// ProductPOSTOKCode is the HTTP code returned for type ProductPOSTOK
const ProductPOSTOKCode int = 200

/*ProductPOSTOK Getting one product.

swagger:response productPOSTOK
*/
type ProductPOSTOK struct {

	/*
	  In: Body
	*/
	Payload *models.Product `json:"body,omitempty"`
}

// NewProductPOSTOK creates ProductPOSTOK with default headers values
func NewProductPOSTOK() *ProductPOSTOK {

	return &ProductPOSTOK{}
}

// WithPayload adds the payload to the product p o s t o k response
func (o *ProductPOSTOK) WithPayload(payload *models.Product) *ProductPOSTOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the product p o s t o k response
func (o *ProductPOSTOK) SetPayload(payload *models.Product) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProductPOSTOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *ProductPOSTOK) ProductPOSTResponder() {}

/*ProductPOSTDefault Generic error response.

swagger:response productPOSTDefault
*/
type ProductPOSTDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewProductPOSTDefault creates ProductPOSTDefault with default headers values
func NewProductPOSTDefault(code int) *ProductPOSTDefault {
	if code <= 0 {
		code = 500
	}

	return &ProductPOSTDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the product p o s t default response
func (o *ProductPOSTDefault) WithStatusCode(code int) *ProductPOSTDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the product p o s t default response
func (o *ProductPOSTDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the product p o s t default response
func (o *ProductPOSTDefault) WithPayload(payload *models.Error) *ProductPOSTDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the product p o s t default response
func (o *ProductPOSTDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProductPOSTDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *ProductPOSTDefault) ProductPOSTResponder() {}

type ProductPOSTNotImplementedResponder struct {
	middleware.Responder
}

func (*ProductPOSTNotImplementedResponder) ProductPOSTResponder() {}

func ProductPOSTNotImplemented() ProductPOSTResponder {
	return &ProductPOSTNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.ProductPOST has not yet been implemented",
		),
	}
}

type ProductPOSTResponder interface {
	middleware.Responder
	ProductPOSTResponder()
}
