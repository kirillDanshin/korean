// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	middleware "github.com/go-openapi/runtime/middleware"

	models "github.com/ZergsLaw/korean/internal/api/models"
)

// BrandListOKCode is the HTTP code returned for type BrandListOK
const BrandListOKCode int = 200

/*BrandListOK Getting a list of brands.

swagger:response brandListOK
*/
type BrandListOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Brand `json:"body,omitempty"`
}

// NewBrandListOK creates BrandListOK with default headers values
func NewBrandListOK() *BrandListOK {

	return &BrandListOK{}
}

// WithPayload adds the payload to the brand list o k response
func (o *BrandListOK) WithPayload(payload []*models.Brand) *BrandListOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the brand list o k response
func (o *BrandListOK) SetPayload(payload []*models.Brand) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BrandListOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Brand, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

func (o *BrandListOK) BrandListResponder() {}

/*BrandListDefault Generic error response.

swagger:response brandListDefault
*/
type BrandListDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewBrandListDefault creates BrandListDefault with default headers values
func NewBrandListDefault(code int) *BrandListDefault {
	if code <= 0 {
		code = 500
	}

	return &BrandListDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the brand list default response
func (o *BrandListDefault) WithStatusCode(code int) *BrandListDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the brand list default response
func (o *BrandListDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the brand list default response
func (o *BrandListDefault) WithPayload(payload *models.Error) *BrandListDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the brand list default response
func (o *BrandListDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BrandListDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *BrandListDefault) BrandListResponder() {}

type BrandListNotImplementedResponder struct {
	middleware.Responder
}

func (*BrandListNotImplementedResponder) BrandListResponder() {}

func BrandListNotImplemented() BrandListResponder {
	return &BrandListNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.BrandList has not yet been implemented",
		),
	}
}

type BrandListResponder interface {
	middleware.Responder
	BrandListResponder()
}
