// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	middleware "github.com/go-openapi/runtime/middleware"

	models "github.com/ZergsLaw/korean/src/internal/api/models"
)

// LoginOKCode is the HTTP code returned for type LoginOK
const LoginOKCode int = 200

/*LoginOK OK

swagger:response loginOK
*/
type LoginOK struct {
	/*Session token.

	 */
	AdminCookie string `json:"AdminCookie"`

	/*
	  In: Body
	*/
	Payload *models.UserInfo `json:"body,omitempty"`
}

// NewLoginOK creates LoginOK with default headers values
func NewLoginOK() *LoginOK {

	return &LoginOK{}
}

// WithAdminCookie adds the adminCookie to the login o k response
func (o *LoginOK) WithAdminCookie(adminCookie string) *LoginOK {
	o.AdminCookie = adminCookie
	return o
}

// SetAdminCookie sets the adminCookie to the login o k response
func (o *LoginOK) SetAdminCookie(adminCookie string) {
	o.AdminCookie = adminCookie
}

// WithPayload adds the payload to the login o k response
func (o *LoginOK) WithPayload(payload *models.UserInfo) *LoginOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the login o k response
func (o *LoginOK) SetPayload(payload *models.UserInfo) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *LoginOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header AdminCookie

	adminCookie := o.AdminCookie
	if adminCookie != "" {
		rw.Header().Set("AdminCookie", adminCookie)
	}

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *LoginOK) LoginResponder() {}

/*LoginDefault Generic error response.

swagger:response loginDefault
*/
type LoginDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewLoginDefault creates LoginDefault with default headers values
func NewLoginDefault(code int) *LoginDefault {
	if code <= 0 {
		code = 500
	}

	return &LoginDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the login default response
func (o *LoginDefault) WithStatusCode(code int) *LoginDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the login default response
func (o *LoginDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the login default response
func (o *LoginDefault) WithPayload(payload *models.Error) *LoginDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the login default response
func (o *LoginDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *LoginDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *LoginDefault) LoginResponder() {}

type LoginNotImplementedResponder struct {
	middleware.Responder
}

func (*LoginNotImplementedResponder) LoginResponder() {}

func LoginNotImplemented() LoginResponder {
	return &LoginNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.Login has not yet been implemented",
		),
	}
}

type LoginResponder interface {
	middleware.Responder
	LoginResponder()
}
