// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// ListProductHandlerFunc turns a function with the right signature into a list product handler
type ListProductHandlerFunc func(ListProductParams) ListProductResponder

// Handle executing the request and returning a response
func (fn ListProductHandlerFunc) Handle(params ListProductParams) ListProductResponder {
	return fn(params)
}

// ListProductHandler interface for that can handle valid list product params
type ListProductHandler interface {
	Handle(ListProductParams) ListProductResponder
}

// NewListProduct creates a new http.Handler for the list product operation
func NewListProduct(ctx *middleware.Context, handler ListProductHandler) *ListProduct {
	return &ListProduct{Context: ctx, Handler: handler}
}

/*ListProduct swagger:route GET /product listProduct

ListProduct list product API

*/
type ListProduct struct {
	Context *middleware.Context
	Handler ListProductHandler
}

func (o *ListProduct) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewListProductParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
