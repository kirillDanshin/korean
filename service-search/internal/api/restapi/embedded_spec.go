// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Service search and information.",
    "title": "Service-search",
    "version": "0.0.1"
  },
  "basePath": "/api/search",
  "paths": {
    "/brand": {
      "get": {
        "description": "Get list brand",
        "operationId": "brandList",
        "responses": {
          "200": {
            "$ref": "#/responses/ListBrand"
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      }
    },
    "/product": {
      "get": {
        "operationId": "listProduct",
        "parameters": [
          {
            "type": "string",
            "name": "query",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "brand",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 25,
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ListProduct"
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      }
    },
    "/product/{productID}": {
      "get": {
        "operationId": "product",
        "parameters": [
          {
            "type": "integer",
            "description": "Track ID.",
            "name": "productID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/OneProduct"
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      }
    }
  },
  "definitions": {
    "Brand": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "$ref": "#/definitions/ID"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "description": "Either same as HTTP Status Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "ID": {
      "description": "Object ID.",
      "type": "integer"
    },
    "Product": {
      "type": "object",
      "required": [
        "id",
        "name",
        "description",
        "apply",
        "price"
      ],
      "properties": {
        "apply": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "$ref": "#/definitions/ID"
        },
        "name": {
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "price": {
          "type": "integer"
        },
        "url": {
          "type": "string"
        }
      }
    }
  },
  "responses": {
    "GenericError": {
      "description": "Generic error response.",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "ListBrand": {
      "description": "Getting a list of brands.",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/Brand"
        }
      }
    },
    "ListProduct": {
      "description": "Receive a list of products.",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/Product"
        }
      }
    },
    "OneProduct": {
      "description": "Getting one product.",
      "schema": {
        "$ref": "#/definitions/Product"
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Service search and information.",
    "title": "Service-search",
    "version": "0.0.1"
  },
  "basePath": "/api/search",
  "paths": {
    "/brand": {
      "get": {
        "description": "Get list brand",
        "operationId": "brandList",
        "responses": {
          "200": {
            "description": "Getting a list of brands.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Brand"
              }
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/product": {
      "get": {
        "operationId": "listProduct",
        "parameters": [
          {
            "type": "string",
            "name": "query",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "brand",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 25,
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Receive a list of products.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/product/{productID}": {
      "get": {
        "operationId": "product",
        "parameters": [
          {
            "type": "integer",
            "description": "Track ID.",
            "name": "productID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Getting one product.",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Brand": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "$ref": "#/definitions/ID"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "description": "Either same as HTTP Status Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "ID": {
      "description": "Object ID.",
      "type": "integer"
    },
    "Product": {
      "type": "object",
      "required": [
        "id",
        "name",
        "description",
        "apply",
        "price"
      ],
      "properties": {
        "apply": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "$ref": "#/definitions/ID"
        },
        "name": {
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "price": {
          "type": "integer"
        },
        "url": {
          "type": "string"
        }
      }
    }
  },
  "responses": {
    "GenericError": {
      "description": "Generic error response.",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "ListBrand": {
      "description": "Getting a list of brands.",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/Brand"
        }
      }
    },
    "ListProduct": {
      "description": "Receive a list of products.",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/Product"
        }
      }
    },
    "OneProduct": {
      "description": "Getting one product.",
      "schema": {
        "$ref": "#/definitions/Product"
      }
    }
  }
}`))
}
