swagger: '2.0'

security:
  - apiKey: []
consumes:
  - application/json
produces:
  - application/json

info:
  version: 0.0.1
  title: Service-storage
  description: Service storage brands and cosmetics.

basePath: /api/storage

schemes:
  - http

securityDefinitions:
  apiKey:
    description: Session token.
    type: apiKey
    in: header
    name: AdminCookie

responses:
  200:
    description: The server successfully processed the request.
    schema:
      $ref: '#/definitions/Success'

  NoContent:
    description: The server successfully processed the request and is not returning any content.

  GenericError:
    description: Generic error response.
    schema:
      $ref: '#/definitions/Error'

paths:

  /brand:
    post:
      description: "Create new brand"
      operationId: brandPOST
      parameters:
        - name: args
          required: true
          in: body
          schema:
            $ref: '#/definitions/BrandCreate'

      responses:
        '200': {$ref: '#/responses/200'}
        default: {$ref: '#/responses/GenericError'}

    delete:
      description: "Delete brand"
      operationId: brandDELETE
      parameters:
        - name: id
          required: true
          in: query
          type: integer

      responses:
        '200': {$ref: '#/responses/NoContent'}
        default: {$ref: '#/responses/GenericError'}

  /product:
    post:
      description: "Create new product"
      operationId: productPOST
      parameters:
        - name: args
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProductCreate'

      responses:
        '200': {$ref: '#/responses/200'}
        default: {$ref: '#/responses/GenericError'}

    delete:
      description: "Delete product"
      operationId: productDELETE
      parameters:
        - name: id
          required: true
          in: query
          type: integer

      responses:
        '200': {$ref: '#/responses/NoContent'}
        default: {$ref: '#/responses/GenericError'}

  /login:
    post:
      description: "Auth method."
      operationId: login
      security: []
      parameters:
        - name: args
          in: body
          schema:
            $ref: '#/definitions/LoginInfo'
      responses:
        '200':
          description: OK
          headers:
            AdminCookie:
              type: string
              description: Session token.
          schema:
            $ref: '#/definitions/UserInfo'
        default: {$ref: '#/responses/GenericError'}

definitions:

  LoginInfo:
    type: object
    required:
      - username
      - password
    properties:
      username:
        $ref: '#/definitions/Username'
      password:
        $ref: '#/definitions/Password'

  BrandCreate:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        minLength: 1
        maxLength: 100

  ProductCreate:
    type: object
    required:
      - name
      - description
      - apply
      - price
      - brandID
    properties:
      name:
        type: string
        minLength: 1
        maxLength: 100
      description:
        type: string
      apply:
        type: string
      price:
        type: integer
      brandID:
        type: integer

  UserInfo:
    type: object
    required:
      - username
      - token
    properties:
      token:
        type: string
      username:
        $ref: '#/definitions/Username'

  Username:
    type: string
    minLength: 1
    maxLength: 32
    description: User login.

  Password:
    type: string
    format: password
    minLength: 1
    maxLength: 100
    description: User password.

  ID:
    type: integer
    description: Object ID.

  Success:
    type: object
    required:
      - id
    properties:
      id:
        $ref: '#/definitions/ID'

  Error:
    type: object
    required:
      - code
      - message
    properties:
      code:
        description: Either same as HTTP Status Code.
        type: integer
        format: int32
      message:
        type: string
