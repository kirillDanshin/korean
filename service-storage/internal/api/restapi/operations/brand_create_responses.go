// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	middleware "github.com/go-openapi/runtime/middleware"

	models "storage/internal/api/models"
)

// BrandCreateOKCode is the HTTP code returned for type BrandCreateOK
const BrandCreateOKCode int = 200

/*BrandCreateOK The server successfully processed the request.

swagger:response brandCreateOK
*/
type BrandCreateOK struct {

	/*
	  In: Body
	*/
	Payload *models.Success `json:"body,omitempty"`
}

// NewBrandCreateOK creates BrandCreateOK with default headers values
func NewBrandCreateOK() *BrandCreateOK {

	return &BrandCreateOK{}
}

// WithPayload adds the payload to the brand create o k response
func (o *BrandCreateOK) WithPayload(payload *models.Success) *BrandCreateOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the brand create o k response
func (o *BrandCreateOK) SetPayload(payload *models.Success) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BrandCreateOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *BrandCreateOK) BrandCreateResponder() {}

/*BrandCreateDefault Generic error response.

swagger:response brandCreateDefault
*/
type BrandCreateDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewBrandCreateDefault creates BrandCreateDefault with default headers values
func NewBrandCreateDefault(code int) *BrandCreateDefault {
	if code <= 0 {
		code = 500
	}

	return &BrandCreateDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the brand create default response
func (o *BrandCreateDefault) WithStatusCode(code int) *BrandCreateDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the brand create default response
func (o *BrandCreateDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the brand create default response
func (o *BrandCreateDefault) WithPayload(payload *models.Error) *BrandCreateDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the brand create default response
func (o *BrandCreateDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BrandCreateDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *BrandCreateDefault) BrandCreateResponder() {}

type BrandCreateNotImplementedResponder struct {
	middleware.Responder
}

func (*BrandCreateNotImplementedResponder) BrandCreateResponder() {}

func BrandCreateNotImplemented() BrandCreateResponder {
	return &BrandCreateNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.BrandCreate has not yet been implemented",
		),
	}
}

type BrandCreateResponder interface {
	middleware.Responder
	BrandCreateResponder()
}
