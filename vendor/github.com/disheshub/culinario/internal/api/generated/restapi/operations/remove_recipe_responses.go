// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	middleware "github.com/go-openapi/runtime/middleware"

	models "github.com/disheshub/culinario/internal/api/generated/models"
)

// RemoveRecipeOKCode is the HTTP code returned for type RemoveRecipeOK
const RemoveRecipeOKCode int = 200

/*RemoveRecipeOK The server successfully processed the request and is not returning any content.

swagger:response removeRecipeOK
*/
type RemoveRecipeOK struct {
}

// NewRemoveRecipeOK creates RemoveRecipeOK with default headers values
func NewRemoveRecipeOK() *RemoveRecipeOK {

	return &RemoveRecipeOK{}
}

// WriteResponse to the client
func (o *RemoveRecipeOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

func (o *RemoveRecipeOK) RemoveRecipeResponder() {}

/*RemoveRecipeDefault Generic error response.

swagger:response removeRecipeDefault
*/
type RemoveRecipeDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRemoveRecipeDefault creates RemoveRecipeDefault with default headers values
func NewRemoveRecipeDefault(code int) *RemoveRecipeDefault {
	if code <= 0 {
		code = 500
	}

	return &RemoveRecipeDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the remove recipe default response
func (o *RemoveRecipeDefault) WithStatusCode(code int) *RemoveRecipeDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the remove recipe default response
func (o *RemoveRecipeDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the remove recipe default response
func (o *RemoveRecipeDefault) WithPayload(payload *models.Error) *RemoveRecipeDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the remove recipe default response
func (o *RemoveRecipeDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RemoveRecipeDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *RemoveRecipeDefault) RemoveRecipeResponder() {}

type RemoveRecipeNotImplementedResponder struct {
	middleware.Responder
}

func (*RemoveRecipeNotImplementedResponder) RemoveRecipeResponder() {}

func RemoveRecipeNotImplemented() RemoveRecipeResponder {
	return &RemoveRecipeNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.RemoveRecipe has not yet been implemented",
		),
	}
}

type RemoveRecipeResponder interface {
	middleware.Responder
	RemoveRecipeResponder()
}
