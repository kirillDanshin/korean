// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	middleware "github.com/go-openapi/runtime/middleware"

	models "github.com/disheshub/culinario/internal/api/generated/models"
)

// RegistrationOKCode is the HTTP code returned for type RegistrationOK
const RegistrationOKCode int = 200

/*RegistrationOK OK

swagger:response registrationOK
*/
type RegistrationOK struct {
	/*Session token.

	 */
	XCulinarioToken string `json:"X-culinario-token"`
}

// NewRegistrationOK creates RegistrationOK with default headers values
func NewRegistrationOK() *RegistrationOK {

	return &RegistrationOK{}
}

// WithXCulinarioToken adds the xCulinarioToken to the registration o k response
func (o *RegistrationOK) WithXCulinarioToken(xCulinarioToken string) *RegistrationOK {
	o.XCulinarioToken = xCulinarioToken
	return o
}

// SetXCulinarioToken sets the xCulinarioToken to the registration o k response
func (o *RegistrationOK) SetXCulinarioToken(xCulinarioToken string) {
	o.XCulinarioToken = xCulinarioToken
}

// WriteResponse to the client
func (o *RegistrationOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-culinario-token

	xCulinarioToken := o.XCulinarioToken
	if xCulinarioToken != "" {
		rw.Header().Set("X-culinario-token", xCulinarioToken)
	}

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

func (o *RegistrationOK) RegistrationResponder() {}

/*RegistrationDefault Generic error response.

swagger:response registrationDefault
*/
type RegistrationDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRegistrationDefault creates RegistrationDefault with default headers values
func NewRegistrationDefault(code int) *RegistrationDefault {
	if code <= 0 {
		code = 500
	}

	return &RegistrationDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the registration default response
func (o *RegistrationDefault) WithStatusCode(code int) *RegistrationDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the registration default response
func (o *RegistrationDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the registration default response
func (o *RegistrationDefault) WithPayload(payload *models.Error) *RegistrationDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the registration default response
func (o *RegistrationDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegistrationDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *RegistrationDefault) RegistrationResponder() {}

type RegistrationNotImplementedResponder struct {
	middleware.Responder
}

func (*RegistrationNotImplementedResponder) RegistrationResponder() {}

func RegistrationNotImplemented() RegistrationResponder {
	return &RegistrationNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.Registration has not yet been implemented",
		),
	}
}

type RegistrationResponder interface {
	middleware.Responder
	RegistrationResponder()
}
