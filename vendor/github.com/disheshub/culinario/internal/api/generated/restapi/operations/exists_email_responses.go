// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	middleware "github.com/go-openapi/runtime/middleware"

	models "github.com/disheshub/culinario/internal/api/generated/models"
)

// ExistsEmailOKCode is the HTTP code returned for type ExistsEmailOK
const ExistsEmailOKCode int = 200

/*ExistsEmailOK OK

swagger:response existsEmailOK
*/
type ExistsEmailOK struct {

	/*
	  In: Body
	*/
	Payload *models.Exists `json:"body,omitempty"`
}

// NewExistsEmailOK creates ExistsEmailOK with default headers values
func NewExistsEmailOK() *ExistsEmailOK {

	return &ExistsEmailOK{}
}

// WithPayload adds the payload to the exists email o k response
func (o *ExistsEmailOK) WithPayload(payload *models.Exists) *ExistsEmailOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the exists email o k response
func (o *ExistsEmailOK) SetPayload(payload *models.Exists) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ExistsEmailOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *ExistsEmailOK) ExistsEmailResponder() {}

/*ExistsEmailDefault Generic error response.

swagger:response existsEmailDefault
*/
type ExistsEmailDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewExistsEmailDefault creates ExistsEmailDefault with default headers values
func NewExistsEmailDefault(code int) *ExistsEmailDefault {
	if code <= 0 {
		code = 500
	}

	return &ExistsEmailDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the exists email default response
func (o *ExistsEmailDefault) WithStatusCode(code int) *ExistsEmailDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the exists email default response
func (o *ExistsEmailDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the exists email default response
func (o *ExistsEmailDefault) WithPayload(payload *models.Error) *ExistsEmailDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the exists email default response
func (o *ExistsEmailDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ExistsEmailDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *ExistsEmailDefault) ExistsEmailResponder() {}

type ExistsEmailNotImplementedResponder struct {
	middleware.Responder
}

func (*ExistsEmailNotImplementedResponder) ExistsEmailResponder() {}

func ExistsEmailNotImplemented() ExistsEmailResponder {
	return &ExistsEmailNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.ExistsEmail has not yet been implemented",
		),
	}
}

type ExistsEmailResponder interface {
	middleware.Responder
	ExistsEmailResponder()
}
