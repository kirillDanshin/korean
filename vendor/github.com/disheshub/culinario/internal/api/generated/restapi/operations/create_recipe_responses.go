// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	middleware "github.com/go-openapi/runtime/middleware"

	models "github.com/disheshub/culinario/internal/api/generated/models"
)

// CreateRecipeOKCode is the HTTP code returned for type CreateRecipeOK
const CreateRecipeOKCode int = 200

/*CreateRecipeOK OK

swagger:response createRecipeOK
*/
type CreateRecipeOK struct {

	/*
	  In: Body
	*/
	Payload *models.Recipe `json:"body,omitempty"`
}

// NewCreateRecipeOK creates CreateRecipeOK with default headers values
func NewCreateRecipeOK() *CreateRecipeOK {

	return &CreateRecipeOK{}
}

// WithPayload adds the payload to the create recipe o k response
func (o *CreateRecipeOK) WithPayload(payload *models.Recipe) *CreateRecipeOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create recipe o k response
func (o *CreateRecipeOK) SetPayload(payload *models.Recipe) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateRecipeOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *CreateRecipeOK) CreateRecipeResponder() {}

/*CreateRecipeDefault Generic error response.

swagger:response createRecipeDefault
*/
type CreateRecipeDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateRecipeDefault creates CreateRecipeDefault with default headers values
func NewCreateRecipeDefault(code int) *CreateRecipeDefault {
	if code <= 0 {
		code = 500
	}

	return &CreateRecipeDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the create recipe default response
func (o *CreateRecipeDefault) WithStatusCode(code int) *CreateRecipeDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the create recipe default response
func (o *CreateRecipeDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the create recipe default response
func (o *CreateRecipeDefault) WithPayload(payload *models.Error) *CreateRecipeDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create recipe default response
func (o *CreateRecipeDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateRecipeDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *CreateRecipeDefault) CreateRecipeResponder() {}

type CreateRecipeNotImplementedResponder struct {
	middleware.Responder
}

func (*CreateRecipeNotImplementedResponder) CreateRecipeResponder() {}

func CreateRecipeNotImplemented() CreateRecipeResponder {
	return &CreateRecipeNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.CreateRecipe has not yet been implemented",
		),
	}
}

type CreateRecipeResponder interface {
	middleware.Responder
	CreateRecipeResponder()
}
