// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "User registration and authentication",
    "title": "Culinario",
    "version": "0.3.1"
  },
  "basePath": "/",
  "paths": {
    "/avatar": {
      "put": {
        "consumes": [
          "multipart/form-data"
        ],
        "operationId": "uploadAvatar",
        "parameters": [
          {
            "type": "file",
            "name": "upFile",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserInfo"
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      }
    },
    "/email": {
      "post": {
        "security": [],
        "operationId": "existsEmail",
        "parameters": [
          {
            "name": "args",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckEmail"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Exists"
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      }
    },
    "/ingredient": {
      "get": {
        "operationId": "getIngredients",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListIngredient"
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      },
      "post": {
        "operationId": "createIngredient",
        "parameters": [
          {
            "name": "args",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/NewIngredient"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListIngredient"
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      },
      "delete": {
        "operationId": "removeIngredient",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "Ingredient ID.",
            "name": "id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/NoContent"
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      }
    },
    "/recipe": {
      "get": {
        "security": [],
        "operationId": "getRecipe",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "Recipe ID.",
            "name": "id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Recipe"
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      },
      "post": {
        "operationId": "createRecipe",
        "parameters": [
          {
            "name": "args",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewRecipe"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Recipe"
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      },
      "delete": {
        "operationId": "removeRecipe",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "Ingredient ID.",
            "name": "id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/NoContent"
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      }
    },
    "/session": {
      "post": {
        "security": [],
        "operationId": "login",
        "parameters": [
          {
            "name": "args",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/LoginInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-culinario-token": {
                "type": "string",
                "description": "Session token."
              }
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      }
    },
    "/user": {
      "get": {
        "security": [],
        "operationId": "getUser",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "User ID.",
            "name": "id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserInfo"
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      },
      "put": {
        "operationId": "updateUserInfo",
        "parameters": [
          {
            "name": "args",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateUserInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserInfo"
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      },
      "post": {
        "security": [],
        "operationId": "registration",
        "parameters": [
          {
            "name": "args",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-culinario-token": {
                "type": "string",
                "description": "Session token."
              }
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      }
    },
    "/weight": {
      "post": {
        "operationId": "newMeasureWeight",
        "parameters": [
          {
            "name": "args",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewMeasureWeight"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListMeasureWeight"
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      },
      "delete": {
        "operationId": "rmMeasureWeight",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "Weight ID.",
            "name": "id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/NoContent"
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      }
    }
  },
  "definitions": {
    "Avatar": {
      "description": "Path to user avatar.",
      "type": "string",
      "minLength": 1
    },
    "CheckEmail": {
      "type": "object",
      "required": [
        "email"
      ],
      "properties": {
        "email": {
          "$ref": "#/definitions/Email"
        }
      }
    },
    "Email": {
      "description": "User email.",
      "type": "string",
      "format": "email",
      "maxLength": 200,
      "minLength": 1
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "description": "Either same as HTTP Status Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Exists": {
      "description": "Exists value.",
      "type": "object",
      "required": [
        "exists"
      ],
      "properties": {
        "exists": {
          "type": "boolean"
        }
      }
    },
    "ID": {
      "description": "User ID.",
      "type": "integer",
      "format": "uuid"
    },
    "Ingredient": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer"
        },
        "id": {
          "$ref": "#/definitions/ID"
        },
        "measureWeight": {
          "$ref": "#/definitions/MeasureWeight"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "ListIngredient": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Ingredient"
          }
        }
      }
    },
    "ListMeasureWeight": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MeasureWeight"
          }
        }
      }
    },
    "LoginInfo": {
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "$ref": "#/definitions/Email"
        },
        "password": {
          "$ref": "#/definitions/Password"
        }
      }
    },
    "MeasureWeight": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "$ref": "#/definitions/ID"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "NewIngredient": {
      "type": "object",
      "required": [
        "measureWeightID",
        "name"
      ],
      "properties": {
        "measureWeightID": {
          "$ref": "#/definitions/ID"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "NewMeasureWeight": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "NewRecipe": {
      "type": "object",
      "required": [
        "name",
        "description",
        "cookingTime",
        "steps",
        "ingredients"
      ],
      "properties": {
        "cookingTime": {
          "description": "Cooking time.",
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "description": "Description recipe.",
          "type": "string",
          "minLength": 1
        },
        "ingredients": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "count": {
                "type": "integer"
              },
              "id": {
                "$ref": "#/definitions/ID"
              }
            }
          }
        },
        "name": {
          "description": "Recipe name.",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "steps": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "number": {
                "description": "What step.",
                "type": "integer",
                "format": "int32"
              },
              "text": {
                "description": "Description step.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "NewUser": {
      "type": "object",
      "required": [
        "username",
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "$ref": "#/definitions/Email"
        },
        "password": {
          "$ref": "#/definitions/Password"
        },
        "username": {
          "$ref": "#/definitions/Username"
        }
      }
    },
    "Password": {
      "description": "User password.",
      "type": "string",
      "format": "password",
      "maxLength": 100,
      "minLength": 1
    },
    "Recipe": {
      "type": "object",
      "required": [
        "id",
        "name",
        "description",
        "cookingTime",
        "steps",
        "ingridients"
      ],
      "properties": {
        "cookingTime": {
          "description": "Cooking time.",
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "description": "Description recipe.",
          "type": "string",
          "minLength": 1
        },
        "id": {
          "$ref": "#/definitions/ID"
        },
        "ingridients": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Ingredient"
          }
        },
        "name": {
          "description": "Recipe name.",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Step"
          }
        }
      }
    },
    "Step": {
      "type": "object",
      "required": [
        "number",
        "text"
      ],
      "properties": {
        "number": {
          "description": "What step.",
          "type": "integer",
          "format": "int32"
        },
        "text": {
          "description": "Description step.",
          "type": "string"
        }
      }
    },
    "UpdateUserInfo": {
      "type": "object",
      "properties": {
        "username": {
          "$ref": "#/definitions/Username"
        }
      }
    },
    "UserInfo": {
      "type": "object",
      "required": [
        "username",
        "email",
        "id"
      ],
      "properties": {
        "avatar": {
          "$ref": "#/definitions/Avatar"
        },
        "email": {
          "$ref": "#/definitions/Email"
        },
        "id": {
          "$ref": "#/definitions/ID"
        },
        "username": {
          "$ref": "#/definitions/Username"
        }
      }
    },
    "Username": {
      "description": "User login.",
      "type": "string",
      "maxLength": 32,
      "minLength": 1,
      "pattern": "^[A-Za-z0-9_]{4,16}$"
    }
  },
  "responses": {
    "GenericError": {
      "description": "Generic error response.",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "NoContent": {
      "description": "The server successfully processed the request and is not returning any content."
    }
  },
  "securityDefinitions": {
    "apiKey": {
      "description": "Session token.",
      "type": "apiKey",
      "name": "X-culinario-token",
      "in": "header"
    }
  },
  "security": [
    {
      "apiKey": null
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "User registration and authentication",
    "title": "Culinario",
    "version": "0.3.1"
  },
  "basePath": "/",
  "paths": {
    "/avatar": {
      "put": {
        "consumes": [
          "multipart/form-data"
        ],
        "operationId": "uploadAvatar",
        "parameters": [
          {
            "type": "file",
            "name": "upFile",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserInfo"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/email": {
      "post": {
        "security": [],
        "operationId": "existsEmail",
        "parameters": [
          {
            "name": "args",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckEmail"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Exists"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ingredient": {
      "get": {
        "operationId": "getIngredients",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListIngredient"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createIngredient",
        "parameters": [
          {
            "name": "args",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/NewIngredient"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListIngredient"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "operationId": "removeIngredient",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "Ingredient ID.",
            "name": "id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The server successfully processed the request and is not returning any content."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/recipe": {
      "get": {
        "security": [],
        "operationId": "getRecipe",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "Recipe ID.",
            "name": "id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Recipe"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createRecipe",
        "parameters": [
          {
            "name": "args",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewRecipe"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Recipe"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "operationId": "removeRecipe",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "Ingredient ID.",
            "name": "id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The server successfully processed the request and is not returning any content."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/session": {
      "post": {
        "security": [],
        "operationId": "login",
        "parameters": [
          {
            "name": "args",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/LoginInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-culinario-token": {
                "type": "string",
                "description": "Session token."
              }
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user": {
      "get": {
        "security": [],
        "operationId": "getUser",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "User ID.",
            "name": "id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserInfo"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "operationId": "updateUserInfo",
        "parameters": [
          {
            "name": "args",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateUserInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserInfo"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "security": [],
        "operationId": "registration",
        "parameters": [
          {
            "name": "args",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-culinario-token": {
                "type": "string",
                "description": "Session token."
              }
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/weight": {
      "post": {
        "operationId": "newMeasureWeight",
        "parameters": [
          {
            "name": "args",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewMeasureWeight"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListMeasureWeight"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "operationId": "rmMeasureWeight",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "Weight ID.",
            "name": "id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The server successfully processed the request and is not returning any content."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Avatar": {
      "description": "Path to user avatar.",
      "type": "string",
      "minLength": 1
    },
    "CheckEmail": {
      "type": "object",
      "required": [
        "email"
      ],
      "properties": {
        "email": {
          "$ref": "#/definitions/Email"
        }
      }
    },
    "Email": {
      "description": "User email.",
      "type": "string",
      "format": "email",
      "maxLength": 200,
      "minLength": 1
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "description": "Either same as HTTP Status Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Exists": {
      "description": "Exists value.",
      "type": "object",
      "required": [
        "exists"
      ],
      "properties": {
        "exists": {
          "type": "boolean"
        }
      }
    },
    "ID": {
      "description": "User ID.",
      "type": "integer",
      "format": "uuid"
    },
    "Ingredient": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer"
        },
        "id": {
          "$ref": "#/definitions/ID"
        },
        "measureWeight": {
          "$ref": "#/definitions/MeasureWeight"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "ListIngredient": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Ingredient"
          }
        }
      }
    },
    "ListMeasureWeight": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MeasureWeight"
          }
        }
      }
    },
    "LoginInfo": {
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "$ref": "#/definitions/Email"
        },
        "password": {
          "$ref": "#/definitions/Password"
        }
      }
    },
    "MeasureWeight": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "$ref": "#/definitions/ID"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "NewIngredient": {
      "type": "object",
      "required": [
        "measureWeightID",
        "name"
      ],
      "properties": {
        "measureWeightID": {
          "$ref": "#/definitions/ID"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "NewMeasureWeight": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "NewRecipe": {
      "type": "object",
      "required": [
        "name",
        "description",
        "cookingTime",
        "steps",
        "ingredients"
      ],
      "properties": {
        "cookingTime": {
          "description": "Cooking time.",
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "description": "Description recipe.",
          "type": "string",
          "minLength": 1
        },
        "ingredients": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "count": {
                "type": "integer"
              },
              "id": {
                "$ref": "#/definitions/ID"
              }
            }
          }
        },
        "name": {
          "description": "Recipe name.",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "steps": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "number": {
                "description": "What step.",
                "type": "integer",
                "format": "int32"
              },
              "text": {
                "description": "Description step.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "NewUser": {
      "type": "object",
      "required": [
        "username",
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "$ref": "#/definitions/Email"
        },
        "password": {
          "$ref": "#/definitions/Password"
        },
        "username": {
          "$ref": "#/definitions/Username"
        }
      }
    },
    "Password": {
      "description": "User password.",
      "type": "string",
      "format": "password",
      "maxLength": 100,
      "minLength": 1
    },
    "Recipe": {
      "type": "object",
      "required": [
        "id",
        "name",
        "description",
        "cookingTime",
        "steps",
        "ingridients"
      ],
      "properties": {
        "cookingTime": {
          "description": "Cooking time.",
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "description": "Description recipe.",
          "type": "string",
          "minLength": 1
        },
        "id": {
          "$ref": "#/definitions/ID"
        },
        "ingridients": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Ingredient"
          }
        },
        "name": {
          "description": "Recipe name.",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Step"
          }
        }
      }
    },
    "Step": {
      "type": "object",
      "required": [
        "number",
        "text"
      ],
      "properties": {
        "number": {
          "description": "What step.",
          "type": "integer",
          "format": "int32"
        },
        "text": {
          "description": "Description step.",
          "type": "string"
        }
      }
    },
    "UpdateUserInfo": {
      "type": "object",
      "properties": {
        "username": {
          "$ref": "#/definitions/Username"
        }
      }
    },
    "UserInfo": {
      "type": "object",
      "required": [
        "username",
        "email",
        "id"
      ],
      "properties": {
        "avatar": {
          "$ref": "#/definitions/Avatar"
        },
        "email": {
          "$ref": "#/definitions/Email"
        },
        "id": {
          "$ref": "#/definitions/ID"
        },
        "username": {
          "$ref": "#/definitions/Username"
        }
      }
    },
    "Username": {
      "description": "User login.",
      "type": "string",
      "maxLength": 32,
      "minLength": 1,
      "pattern": "^[A-Za-z0-9_]{4,16}$"
    }
  },
  "responses": {
    "GenericError": {
      "description": "Generic error response.",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "NoContent": {
      "description": "The server successfully processed the request and is not returning any content."
    }
  },
  "securityDefinitions": {
    "apiKey": {
      "description": "Session token.",
      "type": "apiKey",
      "name": "X-culinario-token",
      "in": "header"
    }
  },
  "security": [
    {
      "apiKey": []
    }
  ]
}`))
}
