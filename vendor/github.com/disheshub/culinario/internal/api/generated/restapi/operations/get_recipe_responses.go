// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	middleware "github.com/go-openapi/runtime/middleware"

	models "github.com/disheshub/culinario/internal/api/generated/models"
)

// GetRecipeOKCode is the HTTP code returned for type GetRecipeOK
const GetRecipeOKCode int = 200

/*GetRecipeOK OK

swagger:response getRecipeOK
*/
type GetRecipeOK struct {

	/*
	  In: Body
	*/
	Payload *models.Recipe `json:"body,omitempty"`
}

// NewGetRecipeOK creates GetRecipeOK with default headers values
func NewGetRecipeOK() *GetRecipeOK {

	return &GetRecipeOK{}
}

// WithPayload adds the payload to the get recipe o k response
func (o *GetRecipeOK) WithPayload(payload *models.Recipe) *GetRecipeOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get recipe o k response
func (o *GetRecipeOK) SetPayload(payload *models.Recipe) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRecipeOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetRecipeOK) GetRecipeResponder() {}

/*GetRecipeDefault Generic error response.

swagger:response getRecipeDefault
*/
type GetRecipeDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetRecipeDefault creates GetRecipeDefault with default headers values
func NewGetRecipeDefault(code int) *GetRecipeDefault {
	if code <= 0 {
		code = 500
	}

	return &GetRecipeDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get recipe default response
func (o *GetRecipeDefault) WithStatusCode(code int) *GetRecipeDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get recipe default response
func (o *GetRecipeDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get recipe default response
func (o *GetRecipeDefault) WithPayload(payload *models.Error) *GetRecipeDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get recipe default response
func (o *GetRecipeDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRecipeDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetRecipeDefault) GetRecipeResponder() {}

type GetRecipeNotImplementedResponder struct {
	middleware.Responder
}

func (*GetRecipeNotImplementedResponder) GetRecipeResponder() {}

func GetRecipeNotImplemented() GetRecipeResponder {
	return &GetRecipeNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.GetRecipe has not yet been implemented",
		),
	}
}

type GetRecipeResponder interface {
	middleware.Responder
	GetRecipeResponder()
}
