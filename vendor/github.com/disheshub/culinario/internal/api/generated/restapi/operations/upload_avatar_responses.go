// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	middleware "github.com/go-openapi/runtime/middleware"

	models "github.com/disheshub/culinario/internal/api/generated/models"
)

// UploadAvatarOKCode is the HTTP code returned for type UploadAvatarOK
const UploadAvatarOKCode int = 200

/*UploadAvatarOK OK

swagger:response uploadAvatarOK
*/
type UploadAvatarOK struct {

	/*
	  In: Body
	*/
	Payload *models.UserInfo `json:"body,omitempty"`
}

// NewUploadAvatarOK creates UploadAvatarOK with default headers values
func NewUploadAvatarOK() *UploadAvatarOK {

	return &UploadAvatarOK{}
}

// WithPayload adds the payload to the upload avatar o k response
func (o *UploadAvatarOK) WithPayload(payload *models.UserInfo) *UploadAvatarOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the upload avatar o k response
func (o *UploadAvatarOK) SetPayload(payload *models.UserInfo) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UploadAvatarOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *UploadAvatarOK) UploadAvatarResponder() {}

/*UploadAvatarDefault Generic error response.

swagger:response uploadAvatarDefault
*/
type UploadAvatarDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUploadAvatarDefault creates UploadAvatarDefault with default headers values
func NewUploadAvatarDefault(code int) *UploadAvatarDefault {
	if code <= 0 {
		code = 500
	}

	return &UploadAvatarDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the upload avatar default response
func (o *UploadAvatarDefault) WithStatusCode(code int) *UploadAvatarDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the upload avatar default response
func (o *UploadAvatarDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the upload avatar default response
func (o *UploadAvatarDefault) WithPayload(payload *models.Error) *UploadAvatarDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the upload avatar default response
func (o *UploadAvatarDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UploadAvatarDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *UploadAvatarDefault) UploadAvatarResponder() {}

type UploadAvatarNotImplementedResponder struct {
	middleware.Responder
}

func (*UploadAvatarNotImplementedResponder) UploadAvatarResponder() {}

func UploadAvatarNotImplemented() UploadAvatarResponder {
	return &UploadAvatarNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.UploadAvatar has not yet been implemented",
		),
	}
}

type UploadAvatarResponder interface {
	middleware.Responder
	UploadAvatarResponder()
}
