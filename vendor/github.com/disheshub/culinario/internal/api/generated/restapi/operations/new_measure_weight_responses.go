// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	middleware "github.com/go-openapi/runtime/middleware"

	models "github.com/disheshub/culinario/internal/api/generated/models"
)

// NewMeasureWeightOKCode is the HTTP code returned for type NewMeasureWeightOK
const NewMeasureWeightOKCode int = 200

/*NewMeasureWeightOK OK

swagger:response newMeasureWeightOK
*/
type NewMeasureWeightOK struct {

	/*
	  In: Body
	*/
	Payload *models.ListMeasureWeight `json:"body,omitempty"`
}

// NewNewMeasureWeightOK creates NewMeasureWeightOK with default headers values
func NewNewMeasureWeightOK() *NewMeasureWeightOK {

	return &NewMeasureWeightOK{}
}

// WithPayload adds the payload to the new measure weight o k response
func (o *NewMeasureWeightOK) WithPayload(payload *models.ListMeasureWeight) *NewMeasureWeightOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the new measure weight o k response
func (o *NewMeasureWeightOK) SetPayload(payload *models.ListMeasureWeight) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NewMeasureWeightOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *NewMeasureWeightOK) NewMeasureWeightResponder() {}

/*NewMeasureWeightDefault Generic error response.

swagger:response newMeasureWeightDefault
*/
type NewMeasureWeightDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewNewMeasureWeightDefault creates NewMeasureWeightDefault with default headers values
func NewNewMeasureWeightDefault(code int) *NewMeasureWeightDefault {
	if code <= 0 {
		code = 500
	}

	return &NewMeasureWeightDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the new measure weight default response
func (o *NewMeasureWeightDefault) WithStatusCode(code int) *NewMeasureWeightDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the new measure weight default response
func (o *NewMeasureWeightDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the new measure weight default response
func (o *NewMeasureWeightDefault) WithPayload(payload *models.Error) *NewMeasureWeightDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the new measure weight default response
func (o *NewMeasureWeightDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NewMeasureWeightDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *NewMeasureWeightDefault) NewMeasureWeightResponder() {}

type NewMeasureWeightNotImplementedResponder struct {
	middleware.Responder
}

func (*NewMeasureWeightNotImplementedResponder) NewMeasureWeightResponder() {}

func NewMeasureWeightNotImplemented() NewMeasureWeightResponder {
	return &NewMeasureWeightNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.NewMeasureWeight has not yet been implemented",
		),
	}
}

type NewMeasureWeightResponder interface {
	middleware.Responder
	NewMeasureWeightResponder()
}
